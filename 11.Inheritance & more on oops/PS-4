###WRITE A CLASS COMPLEX TO REPRESENT COMPLEX NUMBERS,ALONG WITH OVERLOADED OPERATORS + AND * WHICH ADDS AND MULTIPLIES THEM..

class Complex:
    # Constructor to initialize real and imaginary parts
    def __init__(self, r, i):
        self.r = r
        self.i = i

    # Overload '+' operator for complex number addition
    # Overloads the '+' operator for addition of two Complex numbers.
    #(a + bi) + (c + di) = (a+c) + (b+d)i

    def __add__(self, other):
        return Complex(self.r + other.r, self.i + other.i)

    # Overload '*' operator for complex number multiplication
    #Overloads the '*' operator for multiplication of two Complex numbers.
    #(a + bi) * (c + di) = (ac - bd) + (ad + bc)i
    def __mul__(self, other):
        real_part = self.r * other.r - self.i * other.i
        imag_part = self.r * other.i + self.i * other.r
        return Complex(real_part, imag_part)

    # String representation of complex number
    def __str__(self):
        return f"{self.r} + {self.i}i"

# Create two complex number objects
c1 = Complex(3, 2)
c2 = Complex(1, 7)

# Display results
print("Sum:", c1 + c2)
print("Product:",  c1 * c2)
